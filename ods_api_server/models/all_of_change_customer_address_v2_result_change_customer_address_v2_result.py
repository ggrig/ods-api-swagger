# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ods_api_server.models.base_model_ import Model
from ods_api_server.models.tns_change_customer_address_v2_result import TnsChangeCustomerAddressV2Result  # noqa: F401,E501
from ods_api_server import util


class AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, customer_address: object=None):  # noqa: E501
        """AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result - a model defined in Swagger

        :param customer_address: The customer_address of this AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result.  # noqa: E501
        :type customer_address: object
        """
        self.swagger_types = {
            'customer_address': object
        }

        self.attribute_map = {
            'customer_address': 'customerAddress'
        }
        self._customer_address = customer_address

    @classmethod
    def from_dict(cls, dikt) -> 'AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllOfChangeCustomerAddressV2_ResultChangeCustomerAddressV2Result of this AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result.  # noqa: E501
        :rtype: AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_address(self) -> object:
        """Gets the customer_address of this AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result.


        :return: The customer_address of this AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result.
        :rtype: object
        """
        return self._customer_address

    @customer_address.setter
    def customer_address(self, customer_address: object):
        """Sets the customer_address of this AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result.


        :param customer_address: The customer_address of this AllOfChangeCustomerAddressV2ResultChangeCustomerAddressV2Result.
        :type customer_address: object
        """
        if customer_address is None:
            raise ValueError("Invalid value for `customer_address`, must not be `None`")  # noqa: E501

        self._customer_address = customer_address
