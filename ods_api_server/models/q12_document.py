# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ods_api_server.models.base_model_ import Model
from ods_api_server import util


class Q12Document(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, document_no: str=None, document_type: str=None):  # noqa: E501
        """Q12Document - a model defined in Swagger

        :param document_no: The document_no of this Q12Document.  # noqa: E501
        :type document_no: str
        :param document_type: The document_type of this Q12Document.  # noqa: E501
        :type document_type: str
        """
        self.swagger_types = {
            'document_no': str,
            'document_type': str
        }

        self.attribute_map = {
            'document_no': 'DocumentNo',
            'document_type': 'DocumentType'
        }
        self._document_no = document_no
        self._document_type = document_type

    @classmethod
    def from_dict(cls, dikt) -> 'Q12Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The q12_Document of this Q12Document.  # noqa: E501
        :rtype: Q12Document
        """
        return util.deserialize_model(dikt, cls)

    @property
    def document_no(self) -> str:
        """Gets the document_no of this Q12Document.


        :return: The document_no of this Q12Document.
        :rtype: str
        """
        return self._document_no

    @document_no.setter
    def document_no(self, document_no: str):
        """Sets the document_no of this Q12Document.


        :param document_no: The document_no of this Q12Document.
        :type document_no: str
        """
        if document_no is None:
            raise ValueError("Invalid value for `document_no`, must not be `None`")  # noqa: E501

        self._document_no = document_no

    @property
    def document_type(self) -> str:
        """Gets the document_type of this Q12Document.


        :return: The document_type of this Q12Document.
        :rtype: str
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type: str):
        """Sets the document_type of this Q12Document.


        :param document_type: The document_type of this Q12Document.
        :type document_type: str
        """
        if document_type is None:
            raise ValueError("Invalid value for `document_type`, must not be `None`")  # noqa: E501

        self._document_type = document_type
