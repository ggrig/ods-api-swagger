# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ods_api_server.models.base_model_ import Model
from ods_api_server.models.all_of_change_customer_address_v2_change_customer_address_v2 import AllOfChangeCustomerAddressV2ChangeCustomerAddressV2  # noqa: F401,E501
from ods_api_server import util


class ChangeCustomerAddressV2(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, change_customer_address_v2: AllOfChangeCustomerAddressV2ChangeCustomerAddressV2=None):  # noqa: E501
        """ChangeCustomerAddressV2 - a model defined in Swagger

        :param change_customer_address_v2: The change_customer_address_v2 of this ChangeCustomerAddressV2.  # noqa: E501
        :type change_customer_address_v2: AllOfChangeCustomerAddressV2ChangeCustomerAddressV2
        """
        self.swagger_types = {
            'change_customer_address_v2': AllOfChangeCustomerAddressV2ChangeCustomerAddressV2
        }

        self.attribute_map = {
            'change_customer_address_v2': 'ChangeCustomerAddressV2'
        }
        self._change_customer_address_v2 = change_customer_address_v2

    @classmethod
    def from_dict(cls, dikt) -> 'ChangeCustomerAddressV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChangeCustomerAddressV2 of this ChangeCustomerAddressV2.  # noqa: E501
        :rtype: ChangeCustomerAddressV2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_customer_address_v2(self) -> AllOfChangeCustomerAddressV2ChangeCustomerAddressV2:
        """Gets the change_customer_address_v2 of this ChangeCustomerAddressV2.


        :return: The change_customer_address_v2 of this ChangeCustomerAddressV2.
        :rtype: AllOfChangeCustomerAddressV2ChangeCustomerAddressV2
        """
        return self._change_customer_address_v2

    @change_customer_address_v2.setter
    def change_customer_address_v2(self, change_customer_address_v2: AllOfChangeCustomerAddressV2ChangeCustomerAddressV2):
        """Sets the change_customer_address_v2 of this ChangeCustomerAddressV2.


        :param change_customer_address_v2: The change_customer_address_v2 of this ChangeCustomerAddressV2.
        :type change_customer_address_v2: AllOfChangeCustomerAddressV2ChangeCustomerAddressV2
        """
        if change_customer_address_v2 is None:
            raise ValueError("Invalid value for `change_customer_address_v2`, must not be `None`")  # noqa: E501

        self._change_customer_address_v2 = change_customer_address_v2
