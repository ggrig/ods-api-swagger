# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ods_api_server.models.base_model_ import Model
from ods_api_server import util


class Q30Document(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, reservation_no: str=None, payment_amount: str=None):  # noqa: E501
        """Q30Document - a model defined in Swagger

        :param reservation_no: The reservation_no of this Q30Document.  # noqa: E501
        :type reservation_no: str
        :param payment_amount: The payment_amount of this Q30Document.  # noqa: E501
        :type payment_amount: str
        """
        self.swagger_types = {
            'reservation_no': str,
            'payment_amount': str
        }

        self.attribute_map = {
            'reservation_no': 'ReservationNo',
            'payment_amount': 'PaymentAmount'
        }
        self._reservation_no = reservation_no
        self._payment_amount = payment_amount

    @classmethod
    def from_dict(cls, dikt) -> 'Q30Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The q30_Document of this Q30Document.  # noqa: E501
        :rtype: Q30Document
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reservation_no(self) -> str:
        """Gets the reservation_no of this Q30Document.


        :return: The reservation_no of this Q30Document.
        :rtype: str
        """
        return self._reservation_no

    @reservation_no.setter
    def reservation_no(self, reservation_no: str):
        """Sets the reservation_no of this Q30Document.


        :param reservation_no: The reservation_no of this Q30Document.
        :type reservation_no: str
        """
        if reservation_no is None:
            raise ValueError("Invalid value for `reservation_no`, must not be `None`")  # noqa: E501

        self._reservation_no = reservation_no

    @property
    def payment_amount(self) -> str:
        """Gets the payment_amount of this Q30Document.


        :return: The payment_amount of this Q30Document.
        :rtype: str
        """
        return self._payment_amount

    @payment_amount.setter
    def payment_amount(self, payment_amount: str):
        """Sets the payment_amount of this Q30Document.


        :param payment_amount: The payment_amount of this Q30Document.
        :type payment_amount: str
        """
        if payment_amount is None:
            raise ValueError("Invalid value for `payment_amount`, must not be `None`")  # noqa: E501

        self._payment_amount = payment_amount
